<manpage listutils(n) "List Utilities" quill(n)>

<section SYNOPSIS>

<pre>
package require quill <version>
namespace import ::quill::*
</pre>

<itemlist>

<section DESCRIPTION>

listutils(n) contains a number of list-manipulation commands.<p>


<section COMMANDS>

listutils(n) defines the following commands:<p>

<deflist commands>

<defitem got {got <i list>}>

Returns 1 if the list contains any elements, and 0 if the list is empty.
This allows the programmer to write

<pre>
if {[got $someListThatMightBeEmpty]} {
	...
}
</pre>

instead of<p>

<pre>
if {[llength $someListThatMightBeEmpty] > 0} {
	...
}
</pre>

Which seems somewhat trivial, but it reads better, and I'm less likely
to mistype it than the "llength" version, which I seem to mistype about
half the time.<p>

<defitem interleave {interleave <i alist blist>}>

Given two lists, returns the result of interleaving the elements of the
two lists into a single list.  If one list is shorter than the other, it
is implicitly padded with empty strings.<p>

If the elements of <i alist> are unique, and <i blist> contains no more 
items than <i alist>, then the result is a valid dictionary.<p>

<defitem ladd {ladd <i listvar items...>}>

Appends the <i items> to the named list variable only if they are
not already present in the list.  Returns the new list.<p>

<defitem lmaxlen {lmaxlen <i>list</i>}>

Returns the string length of the longest element in <i>list</i>.<p>

<defitem lshift {lshift <i>listvar</i>}>

Pops the top element off of the stack contained in <i>listvar</i>,
i.e., removes the first element from the list contained in <i>listvar</i>,
and returns it.<p>


</deflist commands>


<section AUTHOR>

Will Duquette<p>

<section "SEE ALSO">

<xref quill(n)>.

</manpage>
