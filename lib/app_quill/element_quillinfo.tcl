#-------------------------------------------------------------------------
# TITLE: 
#    element_quillinfo.tcl
#
# AUTHOR:
#    Will Duquette
# 
# PROJECT:
#    Quill: Project build system for Tcl/TK
#
# DESCRIPTION:
#    Project Element: quillinfo(n) package
#
#-------------------------------------------------------------------------

#-------------------------------------------------------------------------
# Quillinfo Templates

::app_quill::element private quillinfo ::app_quill::quillinfoElement

# quillinfo
#
# Saves the quillinfo element tree.

proc ::app_quill::quillinfoElement {} {
    gentree \
        lib/quillinfo/pkgIndex.tcl   [quillinfoPkgIndex]        \
        lib/quillinfo/pkgModules.tcl [quillinfoPkgModules]      \
        lib/quillinfo/quillinfo.tcl  [quillinfoQuillinfo]
}

# quillinfoPkgIndex
#
# pkgIndex.tcl file for the quillinfo(n) package.

maptemplate ::app_quill::quillinfoPkgIndex {} {
    set project [project name]
    set description [project description]
} {
    #-------------------------------------------------------------------------
    # TITLE: 
    #    pkgIndex.tcl
    #
    # PROJECT:
    #    %project: %description
    #
    # DESCRIPTION:
    #    %project quillinfo(n): pkgIndex file
    #
    #    Generated by Quill
    #
    #-------------------------------------------------------------------------

    package ifneeded quillinfo 1.0 [list source [file join $dir pkgModules.tcl]]
}

# quillinfoPkgModules
#
# pkgModules.tcl file for the quillinfo(n) package.

maptemplate ::app_quill::quillinfoPkgModules {} {
    set project [project name]
    set description [project description]

} {
    #-------------------------------------------------------------------------
    # TITLE: 
    #    pkgModules.tcl
    #
    # PROJECT:
    #    %project: %description
    #
    # DESCRIPTION:
    #    %project: quillinfo(n) Package Loader
    #
    #    Generated by Quill
    #
    #-----------------------------------------------------------------------

    package provide quillinfo 1.0

    #-----------------------------------------------------------------------
    # Get the library directory

    namespace eval ::quillinfo:: {
        variable library [file dirname [info script]]
    }

    source [file join $::quillinfo::library quillinfo.tcl]
}

# quillinfoQuillinfo
#
# quillinfo.tcl file for the quillinfo(n) package.

maptemplate ::app_quill::quillinfoQuillinfo {} {
    set project     [project name]
    set description [project description]
    set meta        [list [project metadata]]
} {
    #-------------------------------------------------------------------------
    # TITLE: 
    #    quillinfo.tcl
    #
    # PROJECT:
    #    %project: %description
    #
    # DESCRIPTION:
    #    Project Metadata
    #
    #    Generated by Quill
    #
    #-------------------------------------------------------------------------

    #-------------------------------------------------------------------------
    # Exported Commands

    namespace eval ::quillinfo {
        variable meta
        array set meta %meta

        namespace export \\
            project      \\
            description  \\
            version      \\
            homepage     \\
            isgui

        namespace ensemble create
    }

    #-------------------------------------------------------------------------
    # Commands

    # project
    #
    # Returns the project name.

    proc ::quillinfo::project {} {
        variable meta
        return $meta(project)
    }

    # description 
    #
    # Returns the project's description.

    proc ::quillinfo::description {} {
        variable meta
        return $meta(description)
    }

    # version 
    #
    # Returns the project version number.

    proc ::quillinfo::version {} {
        variable meta
        return $meta(version)
    }

    # homepage 
    #
    # Returns the project home page URL.

    proc ::quillinfo::homepage {} {
        variable meta
        return $meta(homepage)
    }

    # isgui app
    #
    # app   - An app name for this project.
    #
    # Returns true if the app is a GUI and false otherwise.

    proc ::quillinfo::isgui {app} {
        variable meta

        if {[info exists meta(gui-$app)]} {
            return $meta(gui-$app)
        } else {
            return 0
        }
    }
}
